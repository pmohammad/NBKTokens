<?
class Usermodel extends CI_model{

#Function to update date and time
    public function update_main($cname, $cid, $tname, $data){
        $this->db->where($cname, $cid);
        $this->db->update($tname,$data);
    }

#Function to get nationality
    public function get_nationality(){
        $query = $this->db->select('*')
                          ->get('nationality_08');
        if($query){
            return $query->result_array();
        }
        else{
            return false;
        }
    }

#Function to get language
    public function get_language(){
        $query = $this->db->select('*')
                          ->get('preferred_language_11');
        if($query){
            return $query->result_array();
        }
        else{
            return false;
        }
    }

#Function to get interest
    public function get_interest(){
        $query = $this->db->select('*')
                          ->get('user_interest_10');
        if($query){
            return $query->result_array();
        }
        else{
            return false;
        }
    }

#Function to check mobile
    public function check_mobile($mobile){
        $query = $this->db->select('01_mobile')
                          ->where('01_mobile', $mobile)
                          ->get('register_01');
        if($query->num_rows()>0){
            return false;
        }else{
             $query = $this->db->where('number', $mobile)
                             ->delete('verify_otp_12');
            $otp = rand(1, 1000000);
            $data = array(
                'number' => $mobile,
                'otp' => $otp,
                );
            $query = $this->db->insert('verify_otp_12', $data);
            return true;
        }
    }
#Function to check email
    public function check_email($email){
        $query = $this->db->select('01_email')
                          ->where('01_email', $email)
                          ->get('register_01');
        if($query->num_rows()>0){
            return false;
        }else{
            $query = $this->db->where('number', $email)
                             ->delete('verify_otp_12');
            $otp = rand(1, 1000000);
            $data = array(
                'number' => $email,
                'otp' => $otp,
                );
            $query = $this->db->insert('verify_otp_12', $data);
            return true;
        }
    }

#Function to check otp
    public function check_otp($mobile, $otp){
        $query = $this->db->select('id')
                          ->where('number', $mobile)
                          ->where('otp', $otp)
                          ->get('verify_otp_12');
        if($query->num_rows()>0){
           $query = $this->db->where('number', $mobile)
                             ->delete('verify_otp_12');
            return true;
        }else{
            return false;
        }
    }

#Function to check referral
    public function check_referral($referral){
        $query = $this->db->select('01_id')
                          ->where('01_referring_code', $referral)
                          ->get('register_01');
        if($query->num_rows()>0){
            $result = $query->row_array();
            return $result['01_id'];
        }else{
            return 0;
        }
    }

#Function to get balance
    public function get_userbalance($id){
        $query = $this->db->join('register_01 b', 'a.01_id = b.01_id')
                         ->where('a.01_id', $id)
                         ->order_by('09_date', 'DESC')
                         ->limit(1)
                         ->get('wallet_09 a');
        if($query){
            return $query->row_array();
        }
    }

#Function to complete registration
    public function registration($name,$mobile,$nationality,$referral,$pass,$email,$gender, $dob, $interest,$language){
        $data = array(
            '01_name' => $name,
            '01_mobile' => $mobile,
            '01_nationality' => $nationality,
            '01_referby' =>$referral,
            '01_password' => $pass,
            '01_role'=> '3',
            '01_email'=> $email,
            '01_gender'=> $gender,
            '01_age'=> $dob,
            '01_interest'=> $interest,
            '01_language'=> $language,
		);
		$query = $this->db->insert('register_01', $data);
		if($query){
		    $q = $this->db->select('*')
		                  ->where('01_id', $this->db->insert_id())
		                  ->get('register_01');
		    $rcode = substr($name,0,2).substr($mobile,-2).$this->db->insert_id().$nationality;
		    $data = array(
		        '01_email_verified_on' =>date('Y-m-d H:i:s'), 
		        '01_mobile_verified_on'=>date('Y-m-d H:i:s'), 
		        "01_created_on" => date('Y-m-d H:i:s'), 
		        "01_created_by" => $this->db->insert_id(),
		        "01_updated_on" => date('Y-m-d H:i:s'), 
		        "01_updated_by" => $this->db->insert_id(),
		        "01_referring_code" =>$rcode,
		        );
		    $this->update_main('01_id', $this->db->insert_id(), 'register_01', $data);
		    if($referral>0){
		        $updaterefer = $this->db->set('01_total_refer', '`01_total_refer`+ 1', FALSE)
		                                ->where('01_id',$referral)
		                                ->update('register_01');
		        $balance =$this->db->select('sum(09_balance)')
		                           ->where('01_id', $referral)
		                           ->get('wallet_09');
		        $bal = $balance->row_array();
		        $b = $bal['09_balance'];
		        $data = array(
		            '01_id' => $referral,
		            '09_description' => 'Referred to '.$mobile.'( '. $name. ' )',
		            '09_date' =>date('Y-m-d'),
		            '09_earn' =>0,
		            '09_balance' =>$b+0,
		            );
		            $query = $this->db->insert('wallet_09', $data);
		    }
		    return $q->row_array();
		}else{
		    return false;
		}
    }

#Function to verify email
    public function verify_email($email){
        $query = $this->db->where('01_email', $email)
                          ->get('register_01');
        if(sizeof($query->result_array())>0){
            return true;
        }
        else{
            return false;
        }
    }
#Function to update user
    public function update_user($email,$link){
        $query = $this->db->where('01_email', $email)
                          ->set('forgot_token', $link)
                          ->update('register_01');
        if($query){
            return true;
        }else{
            return false;
        }
    }

#Function to update password
    public function update_password($email, $password){
        $query = $this->db->where('01_email', $email)
                          ->set('01_password', $password)
                          ->update('register_01');
        if($query){
            return true;
        }else{
            return false;
        }
    }

#Function to get user data
    public function get_userdata($link){
        $query = $this->db->where('forgot_token', $link)
                          ->get('register_01');
        if($query){
            return $query->row_array();
        }else{
            return false;
        }
    }
#Function to update token
    public function update_token($uid, $token){
        $query = $this->db->where('01_id', $uid)
                         ->set('01_token', $token)
                         ->update('register_01');
        if($query){
            return true;
        }else{
            return false;
        }
    }

#Function to get token
    public function get_token($uid){
        $query = $this->db->select('01_token')
                          ->where('01_id', $uid)
                          ->get('register_01');
        $token = $query->row_array();
        return $token['01_token'];
    }

#Function to validate login
    public function validate_login($mobile,$password){
        $query=$this->db->where('01_mobile',$mobile)
                        ->where('01_password',$password) 
                        ->where('01_role',3)
					    ->get('register_01');
		if($query->num_rows()==1){
		    return $query->row_array();
		}else{
		    return false;
		}
    }

#Function to get user details
    public function fetch_profile_details($id){
        $query = $this->db->join('nationality_08 b', 'a.01_nationality=b.08_id')
                          ->where('a.01_id', $id)
                          ->get('register_01 a');
        if($query){
            return $query->result_array();
        }
        else{
            return false;
        }
    }
#Function to fetch wallet
    public function fetch_wallet($id){
        $query = $this->db->where('01_id', $id)
                          ->order_by('09_date', 'DESC')
                          ->get('wallet_09');
        if($query){
            return $query->result_array();
        }else{
            return false;
        }
    }
#Function to fetch thumbnailsrView to display link campaign
    public function fetch_thumbnails($start, $uid){
        $userq = $this->db->where('01_id', $uid)
                          ->get('register_01');
        $res = $userq->row_array();
        $interest  = explode(',', $res['01_interest']);
        $interest = array_map('intval', $interest);
        $nationality  = explode(',', $res['01_nationality']);
        $nationality = array_map('intval', $nationality);
        $age  = explode(',', $res['01_age']);
        $age = array_map('intval', $age);
        $lang  = explode(',', $res['01_language']);
        $lang = array_map('intval', $lang);
        $gender  = explode(',', $res['01_gender']);
        $gender = array_map('intval', $gender);
        $this->db->where_in('06_interest', $interest);
        $this->db->limit(9);
        $query = $this->db->join('campaign_rules_06 b', 'b.05_id=a.05_id')
                          ->join('company_04 c', 'a.04_id=c.04_id')
                          ->where_in('06_nationality', $nationality)
                          ->where_in('06_gender', $gender)
                          ->where_in('06_agegroup', $age)
                          ->where_in('06_language', $lang)
                          ->order_by('06_price', "DESC")
                          ->where('05_campaign_status', 3)
                          ->where('04_balance_left>= b.06_price')
                          ->get('campaign_05 a');
        if($query){
            return $query->result_array();
        }else{
            return false;
        }
    }
#Function to fetch video
    public function fetch_video($id){
        $query = $this->db->join('campaign_rules_06 b', 'a.05_id=b.05_id')
                          ->where('a.05_id', $id)
                          ->get('campaign_05 a');
        if($query){
            return $query->row_array();
        }else{
            return false;
        }
    }
#Function to add history
    public function add_history($id, $uid,$id6){
        $q = $this->db->where('01_id', $uid)
                      ->where('07_status', 0)
                      ->get('watch_history_07');
        $resq  = $q->row_array();
        if(!isset($resq)){
            
            $price = $this->db->where('06_id', $id6)
                              ->get('campaign_rules_06');
            $get_price = $price->row_array();
            
            $cid = $this->db->where('05_id', $id)
                            ->get('campaign_05');
            $company_id = $cid->row_array();
            
            $get_balance = $this->db->select('04_balance_left')
                                ->where('04_id', $company_id['04_id'])
                                ->get('company_04');
            $balance = $get_balance->row_array();
            $balance = $balance['04_balance_left'];
            
            if($balance >= $get_price['06_price']){
                $reserve_bal = $balance - $get_price['06_price'];
                $this->db->where('04_id', $company_id['04_id'])->set('04_balance_left', $reserve_bal)->update('company_04');
                
                $data = array(
                    '01_id' =>$uid,
                    '05_id' =>$id,
                    '07_start_time' =>0,
                    '07_video_seconds' =>0,
                    '07_pay_me' =>0,
                    '07_status' =>0,
                    '07_amount' =>$get_price['06_price'],
                    '07_date' => date('Y-m-d'),
                );
                $query = $this->db->insert('watch_history_07', $data);
                if($query){
                    return "true";
                }else{
                    return "false";
                }
            }
            else{
                return '-1';   
            }
        }
        else{
            return $resq['07_id'];            
        }
    }

#Function to fetch history video
    public function fetch_history_video($id,$uid){
        $query = $this->db->join('campaign_rules_06 b', 'a.05_id=b.05_id')
                          ->join('watch_history_07 c', 'a.05_id=c.05_id')
                          ->where('c.01_id', $uid)
                          ->where('c.07_id', $id)
                          ->where('c.07_status', 0)
                          ->get('campaign_05 a');
        if($query){
            return $query->row_array();
        }else{
            return false;
        }
    }

#Function to add time out
    public function set_timeout($uid, $time){
        $q = $this->db->where('01_id', $uid)
                          ->where('07_status', 0)
                          ->get('watch_history_07');
        $resq  = $q->row_array();        
        $duration  = $this->db->select('*')
                              ->where('05_id', $resq['05_id'])
                              ->get('campaign_05');
        $resdur = $duration->row_array();
        $percentage =($time / $resdur['05_seconds']) *100;
        if($percentage>=$resdur['05_up_limit']){
            
            $query = $this->db->where('01_id', $uid)
                              ->where('07_status', 0)
                              ->where('05_id', $resq['05_id'])
                              ->set('07_end_time', $time)
                              ->set('07_video_seconds', $percentage)
                              ->set('07_status', 2)
                              ->set('07_company_charged', 1)
                              ->update('watch_history_07');
            /*$get_balance = $this->db->select('04_balance_left')
                                    ->where('04_id', $resdur['04_id'])
                                    ->get('company_04');
            $balance = $get_balance->row_array();
            $balance = $balance['04_balance_left'] - $resq['07_amount'];
            $this->db->where('04_id', $resdur['04_id'])->set('04_balance_left', $balance)->update('company_04');*/
                    
        }else if($percentage==100){
            $query = $this->db->where('01_id', $uid)
                              ->where('07_status', 0)
                              ->where('05_id', $resq['05_id'])
                              ->set('07_end_time', $time)
                              ->set('07_video_seconds', $percentage)
                              ->set('07_status', 1)
                              ->set('07_company_charged', 1)
                              ->update('watch_history_07');
            /*$get_balance = $this->db->select('04_balance_left')
                                    ->where('04_id', $resdur['04_id'])
                                    ->get('company_04');
            $balance = $get_balance->row_array();
            $balance = $balance['04_balance_left'] - $resq['07_amount'];
            $this->db->where('04_id', $resdur['04_id'])->set('04_balance_left', $balance)->update('company_04');*/
                    
        }else{
            
            
            $price = $this->db->where('05_id', $resq['05_id'])
                              ->get('campaign_rules_06');
            $get_price = $price->row_array();
            
            $get_balance = $this->db->select('04_balance_left')
                                    ->where('04_id', $resdur['04_id'])
                                    ->get('company_04');
            $balance = $get_balance->row_array();
            $balance = $balance['04_balance_left'] + $get_price['06_price'];
            
            $this->db->where('04_id', $resdur['04_id'])->set('04_balance_left', $balance)->update('company_04');
            
            
            $query = $this->db->where('01_id', $uid)
                              ->where('07_status', 0)
                              ->where('05_id', $resq['05_id'])
                              ->set('07_end_time', $time)
                              ->set('07_video_seconds', $percentage)
                              ->set('07_status', 2)
                              ->update('watch_history_07');
        }
        if($query){
            return true;
        }else{
            return false;
        }
    }
    
#Function to add time out
    public function add_money($uid, $time){
        $q = $this->db->where('01_id', $uid)
                      ->where('07_status', 0)
                      ->get('watch_history_07');
        $resq  = $q->row_array();        
        $duration  = $this->db->select('*')
                              ->where('05_id', $resq['05_id'])
                              ->get('campaign_05');
        $resdur = $duration->row_array();
        $percentage = ($time / $resdur['05_seconds']) *100;
            $query = $this->db->where('01_id', $uid)
                              ->where('07_status', 0)
                              ->where('05_id', $resq['05_id'])
                              ->set('07_end_time', $time)
                              ->set('07_video_seconds', $percentage)
                              ->set('07_status', 1)
                              ->set('07_pay_me', 1)
                              ->set('07_company_charged', 1)
                              ->update('watch_history_07');
                              
            $wallet = $this->db->select('09_balance')
                               ->where('01_id', $uid)
                               ->order_by('09_id', "DESC")
                               ->limit(1)
                               ->get('wallet_09');
            $walletres = $wallet->row_array();
            $wallet_balance = $walletres['09_balance'] + $resq['07_amount'];
                               
            $data = array(
                        '01_id' =>$uid,
                        '09_description' =>'Video Watched',
                        '09_date' =>date('Y-m-d H:i:s'),
                        '09_earn' =>$resq['07_amount'],
                        '09_balance' => $wallet_balance,
                        '09_type' =>2,
                        '07_id' => $resq['07_id'],
                    );
            $add_wallet = $this->db->insert('wallet_09', $data);
            /*$get_balance = $this->db->select('04_balance_left')
                                    ->where('04_id', $resdur['04_id'])
                                    ->get('company_04');
            $balance = $get_balance->row_array();
            $balance = $balance['04_balance_left'] - $resq['07_amount'];
            $this->db->where('04_id', $resdur['04_id'])->set('04_balance_left', $balance)->update('company_04');*/
        if($query){
            return true;
        }else{
            return false;
        }
    }

#Function to load watch history
    public function watch_history($id){
        $query = $this->db->join('campaign_05 b', 'a.05_id = b.05_id')
                          ->where('01_id', $id)
                          ->order_by('07_id', "DESC")
                          ->get('watch_history_07 a');
        if($query){
            return $query->result_array();
        }else{
            return false;
        }
    }

#Function to add bank details
    public function bank_details($id,$civil_front,$civil_back,$iban,$acc_name,$banks){
        $data = array(
            '01_id' => $id,
            '16_civil_front' =>$civil_front,
            '16_civil_back' =>$civil_back,
            '16_iban' =>$iban,
            '16_account_name' => $acc_name,
            'bank_id' => $banks,
        );
        $query = $this->db->insert('bank_details_16', $data);
        if($query){
            $update = $this->db->set('is_bank_details', 1)->where('01_id', $id)->update('register_01');
            $amount = $this->db->select('09_balance')->where('01_id', $id)->order_by('09_date', 'DESC')->limit(1)->get('wallet_09');
            $balance = $amount->row_array();
            $bal = $balance['09_balance'];
            $withdraw = array(
                '01_id' =>$id,
                '09_date' =>date('Y-m-d H:i:s'),
                '09_description'=>'Withdrawal Requested',
                '09_withdraw' =>$bal,
                '09_balance' =>0.000,
                '09_type'=>3,
                );
            $with_req = $this->db->insert('wallet_09',$withdraw);
            if($with_req){
                return true;    
            }else{
                return false;
            }
            
        }else{
            return false;
        }
    }

#Function to request withdraw
    public function request_withdraw($id,$pass){
        $query=$this->db->where('01_id',$id)
                        ->where('01_password',$pass) 
                        ->where('01_role',3)
					    ->get('register_01');
		if($query->num_rows()==1){
		    $amount = $this->db->select('09_balance')->where('01_id', $id)->order_by('09_date', 'DESC')->limit(1)->get('wallet_09');
            $balance = $amount->row_array();
            $bal = $balance['09_balance'];
            $withdraw = array(
                '01_id' =>$id,
                '09_date' =>date('Y-m-d H:i:s'),
                '09_description'=>'Withdrawal Requested',
                '09_withdraw' =>$bal,
                '09_balance' =>0.000,
                '09_type'=>3,
                );
            $with_req = $this->db->insert('wallet_09',$withdraw);
            if($with_req){
                return true;    
            }else{
                return false;
            }
		}
		else{
		    return false;
		}
    }

#Function to fetch banks
    public function fetch_banks(){
        $query = $this->db->where('status_id', 1)->get('banks');
        if($query){
            return $query->result_array();
        }else{
            return false;
        }
    }
}
?>